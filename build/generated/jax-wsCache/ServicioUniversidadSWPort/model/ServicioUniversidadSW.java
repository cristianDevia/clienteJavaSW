
package model;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServicioUniversidadSW", targetNamespace = "http://model/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioUniversidadSW {


    /**
     * 
     * @return
     *     returns java.util.List<model.Matricula>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMatriculas", targetNamespace = "http://model/", className = "model.GetMatriculas")
    @ResponseWrapper(localName = "getMatriculasResponse", targetNamespace = "http://model/", className = "model.GetMatriculasResponse")
    @Action(input = "http://model/ServicioUniversidadSW/getMatriculasRequest", output = "http://model/ServicioUniversidadSW/getMatriculasResponse")
    public List<Matricula> getMatriculas();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarEstudiantes", targetNamespace = "http://model/", className = "model.ListarEstudiantes")
    @ResponseWrapper(localName = "listarEstudiantesResponse", targetNamespace = "http://model/", className = "model.ListarEstudiantesResponse")
    @Action(input = "http://model/ServicioUniversidadSW/listarEstudiantesRequest", output = "http://model/ServicioUniversidadSW/listarEstudiantesResponse")
    public List<Object> listarEstudiantes();

    /**
     * 
     * @param arg0
     * @return
     *     returns model.Estudiante
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarEstudiantePorCodigo", targetNamespace = "http://model/", className = "model.BuscarEstudiantePorCodigo")
    @ResponseWrapper(localName = "buscarEstudiantePorCodigoResponse", targetNamespace = "http://model/", className = "model.BuscarEstudiantePorCodigoResponse")
    @Action(input = "http://model/ServicioUniversidadSW/buscarEstudiantePorCodigoRequest", output = "http://model/ServicioUniversidadSW/buscarEstudiantePorCodigoResponse")
    public Estudiante buscarEstudiantePorCodigo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "cargarDatosMatricula", targetNamespace = "http://model/", className = "model.CargarDatosMatricula")
    @Action(input = "http://model/ServicioUniversidadSW/cargarDatosMatricula")
    public void cargarDatosMatricula();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "anadirEstudiante", targetNamespace = "http://model/", className = "model.AnadirEstudiante")
    @Action(input = "http://model/ServicioUniversidadSW/anadirEstudiante")
    public void anadirEstudiante(
        @WebParam(name = "arg0", targetNamespace = "")
        Estudiante arg0);

    /**
     * 
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "cargarDatosPrograma", targetNamespace = "http://model/", className = "model.CargarDatosPrograma")
    @Action(input = "http://model/ServicioUniversidadSW/cargarDatosPrograma")
    public void cargarDatosPrograma();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "anadirMatricula", targetNamespace = "http://model/", className = "model.AnadirMatricula")
    @Action(input = "http://model/ServicioUniversidadSW/anadirMatricula")
    public void anadirMatricula(
        @WebParam(name = "arg0", targetNamespace = "")
        Matricula arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "eliminarPorCodigoEstudiante", targetNamespace = "http://model/", className = "model.EliminarPorCodigoEstudiante")
    @Action(input = "http://model/ServicioUniversidadSW/eliminarPorCodigoEstudiante")
    public void eliminarPorCodigoEstudiante(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "eliminarPorNumeroMatricula", targetNamespace = "http://model/", className = "model.EliminarPorNumeroMatricula")
    @Action(input = "http://model/ServicioUniversidadSW/eliminarPorNumeroMatricula")
    public void eliminarPorNumeroMatricula(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "actualizarMatricula", targetNamespace = "http://model/", className = "model.ActualizarMatricula")
    @Action(input = "http://model/ServicioUniversidadSW/actualizarMatricula")
    public void actualizarMatricula(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        double arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        double arg4);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarMatriculas", targetNamespace = "http://model/", className = "model.ListarMatriculas")
    @ResponseWrapper(localName = "listarMatriculasResponse", targetNamespace = "http://model/", className = "model.ListarMatriculasResponse")
    @Action(input = "http://model/ServicioUniversidadSW/listarMatriculasRequest", output = "http://model/ServicioUniversidadSW/listarMatriculasResponse")
    public List<Object> listarMatriculas();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarProgramas", targetNamespace = "http://model/", className = "model.ListarProgramas")
    @ResponseWrapper(localName = "listarProgramasResponse", targetNamespace = "http://model/", className = "model.ListarProgramasResponse")
    @Action(input = "http://model/ServicioUniversidadSW/listarProgramasRequest", output = "http://model/ServicioUniversidadSW/listarProgramasResponse")
    public List<Object> listarProgramas();

    /**
     * 
     * @param arg0
     * @return
     *     returns model.Matricula
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarMatricula", targetNamespace = "http://model/", className = "model.BuscarMatricula")
    @ResponseWrapper(localName = "buscarMatriculaResponse", targetNamespace = "http://model/", className = "model.BuscarMatriculaResponse")
    @Action(input = "http://model/ServicioUniversidadSW/buscarMatriculaRequest", output = "http://model/ServicioUniversidadSW/buscarMatriculaResponse")
    public Matricula buscarMatricula(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<model.Estudiante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEstudiantes", targetNamespace = "http://model/", className = "model.GetEstudiantes")
    @ResponseWrapper(localName = "getEstudiantesResponse", targetNamespace = "http://model/", className = "model.GetEstudiantesResponse")
    @Action(input = "http://model/ServicioUniversidadSW/getEstudiantesRequest", output = "http://model/ServicioUniversidadSW/getEstudiantesResponse")
    public List<Estudiante> getEstudiantes();

    /**
     * 
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "cargarDatosEstudiantes", targetNamespace = "http://model/", className = "model.CargarDatosEstudiantes")
    @Action(input = "http://model/ServicioUniversidadSW/cargarDatosEstudiantes")
    public void cargarDatosEstudiantes();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "actualizarEstudiantePorCodigo", targetNamespace = "http://model/", className = "model.ActualizarEstudiantePorCodigo")
    @Action(input = "http://model/ServicioUniversidadSW/actualizarEstudiantePorCodigo")
    public void actualizarEstudiantePorCodigo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        XMLGregorianCalendar arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        String arg6);

}
