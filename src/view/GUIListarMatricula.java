/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import estructural.Estudiante;
import estructural.Matricula;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.datatype.XMLGregorianCalendar;

/**
 *
 * @author Cristian Devia
 */
public class GUIListarMatricula extends javax.swing.JFrame {

  
    DefaultTableModel tabla;
    
    /**
     * Creates new form GUIListar
     */
    public GUIListarMatricula() {
        
        initComponents();
        setLocationRelativeTo(null);
        tabla  = (DefaultTableModel) grilla.getModel();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        btnListar1 = new javax.swing.JButton();
        btnListarPorCreditos = new javax.swing.JButton();
        btnListarPorValor = new javax.swing.JButton();
        txtFiltrarXValor = new javax.swing.JTextField();
        txtFiltrarXCreditos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listar");

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÃºmero", "Fecha", "Estu.Cedula", "Estu.Codigo", "Programa", "Num.Creditos", "PPA", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(grilla);

        btnListar1.setText("Listar");
        btnListar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListar1ActionPerformed(evt);
            }
        });

        btnListarPorCreditos.setText("F.Creditos");
        btnListarPorCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPorCreditosActionPerformed(evt);
            }
        });

        btnListarPorValor.setText("F.Valor");
        btnListarPorValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPorValorActionPerformed(evt);
            }
        });

        txtFiltrarXValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltrarXValorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(btnListarPorCreditos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltrarXCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnListar1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnListarPorValor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltrarXValor, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListarPorCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltrarXValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListarPorValor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltrarXCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListar1ActionPerformed
        // TODO add your handling code here:
       
        tabla.setRowCount(0);
  
        try 
        {

          model.ServicioUniversidadSW_Service service = new model.ServicioUniversidadSW_Service();
        model.ServicioUniversidadSW port = service.getServicioUniversidadSWPort();
        List<Object> mat = port.listarMatriculas();
        model.Matricula matriculas[] = mat.stream().toArray(model.Matricula[]::new);
      
        
        for(int i=0; i<matriculas.length;i++)
        {
          model.Matricula estu = (model.Matricula)matriculas[i];
          
                        
            int numero = estu.getNumeroMatricula();
            XMLGregorianCalendar fecha = estu.getFechaMatricula();
            Date fechaN = fecha.toGregorianCalendar().getTime();            
            String fechaComoCadena = fechaN.toString();
            int cedulaEstu = estu.getCedulaEstudiante();
            String codigoEstu = estu.getCodigoEstudiante();
            String programa = estu.getPrograma();
            int numCreditos = estu.getNumCreditos();
            double ppa = estu.getPpa();
            double valor = estu.getValor();   
            tabla.addRow(new Object[]{numero, fechaComoCadena, cedulaEstu, codigoEstu, programa,numCreditos,ppa,valor});
            
               
          
            
        }
        
       }
             
         catch (Exception ex) {
            Logger.getLogger(GUIListar.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnListar1ActionPerformed
               
    private void btnListarPorCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPorCreditosActionPerformed
        // TODO add your handling code here:
 
        tabla.setRowCount(0);
  
        try 
        {
        model.ServicioUniversidadSW_Service service = new model.ServicioUniversidadSW_Service();
        model.ServicioUniversidadSW port = service.getServicioUniversidadSWPort();
        List<Object> mat = port.listarMatriculas();
        model.Matricula matriculas[] = mat.stream().toArray(model.Matricula[]::new);
        
        for(int i=0; i<matriculas.length;i++)
        {
            int creditosMinimo = Integer.parseInt(txtFiltrarXCreditos.getText());
            model.Matricula estu = (model.Matricula)matriculas[i];
            if(estu.getNumCreditos()>= creditosMinimo)
            {            
            int numero = estu.getNumeroMatricula();
            XMLGregorianCalendar fecha = estu.getFechaMatricula();
            Date fechaN = fecha.toGregorianCalendar().getTime();            
            String fechaComoCadena = fechaN.toString();
            int cedulaEstu = estu.getCedulaEstudiante();
            String codigoEstu = estu.getCodigoEstudiante();
            String programa = estu.getPrograma();
            int numCreditos = estu.getNumCreditos();
            double ppa = estu.getPpa();
            double valor = estu.getValor();   
            tabla.addRow(new Object[]{numero, fechaComoCadena, cedulaEstu, codigoEstu, programa,numCreditos,ppa,valor});
            
            }    
          
            
            
        }
        
       }
             
         catch (Exception ex) {
            Logger.getLogger(GUIListar.class.getName()).log(Level.SEVERE, null, ex);
        }
                
        
    }//GEN-LAST:event_btnListarPorCreditosActionPerformed

    private void btnListarPorValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPorValorActionPerformed
        // TODO add your handling code here:
        tabla.setRowCount(0);
  
        try 
        {
        model.ServicioUniversidadSW_Service service = new model.ServicioUniversidadSW_Service();
        model.ServicioUniversidadSW port = service.getServicioUniversidadSWPort();
        List<Object> mat = port.listarMatriculas();
        model.Matricula matriculas[] = mat.stream().toArray(model.Matricula[]::new);
        
        for(int i=0; i<matriculas.length;i++)
        {
            int creditosMinimo = Integer.parseInt(txtFiltrarXValor.getText());
            model.Matricula estu = (model.Matricula)matriculas[i];
            if(estu.getValor()>= creditosMinimo)
            {            
            int numero = estu.getNumeroMatricula();
            XMLGregorianCalendar fecha = estu.getFechaMatricula();
            Date fechaN = fecha.toGregorianCalendar().getTime();            
            String fechaComoCadena = fechaN.toString();
            int cedulaEstu = estu.getCedulaEstudiante();
            String codigoEstu = estu.getCodigoEstudiante();
            String programa = estu.getPrograma();
            int numCreditos = estu.getNumCreditos();
            double ppa = estu.getPpa();
            double valor = estu.getValor();   
            tabla.addRow(new Object[]{numero, fechaComoCadena, cedulaEstu, codigoEstu, programa,numCreditos,ppa,valor});
            
            }    
          
            
            
        }
        
       }
             
         catch (Exception ex) {
            Logger.getLogger(GUIListar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarPorValorActionPerformed

    private void txtFiltrarXValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltrarXValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltrarXValorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListar1;
    private javax.swing.JButton btnListarPorCreditos;
    private javax.swing.JButton btnListarPorValor;
    private javax.swing.JTable grilla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFiltrarXCreditos;
    private javax.swing.JTextField txtFiltrarXValor;
    // End of variables declaration//GEN-END:variables
}
